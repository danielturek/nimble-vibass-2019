#! /usr/local/bin/Rscript
# usage:
# ./make_slides overview
# cd modules; ../make_slides nimble_bugs
# etc.

library(knitr)
library(rmarkdown)

cmdArgs <- commandArgs(trailingOnly = TRUE)

if(length(cmdArgs) == 0) {
    system('make clean')
    cmdArgs <- c('overview.Rmd',
                 'logistics.Rmd',
                 list.files(path = 'modules', pattern = '\\.Rmd$', full.names = TRUE)
                 )
}

## remove trailing period (.), if present
cmdArgs <- gsub('\\.$', '', cmdArgs)

## remove trailing (.Rmd), if present
cmdArgs <- gsub('\\.Rmd', '', cmdArgs)

for(f in cmdArgs) {
    filename <- paste0(f, '.Rmd')
    if(!file.exists(filename)) {
        message(paste0('could not find file: ', filename))
        next
    }
    mdFile <- paste0('mdFiles/', gsub('modules/', '', f), '.md')
    knit(filename, envir = new.env(), output = mdFile)
    system(paste("pandoc -s --webtex -t slidy ", mdFile, " -o ", paste(f, "_slides.html", sep = ""), " --self-contained"))
    render(filename, envir = new.env()) # for style that can hide code chunks dynamically
    ##codeFile <- paste0('code/', gsub('modules/', '', f), '.R')
    ##purl(filename, output = codeFile) ## make separate .R file with just the code
    ##if(length(readLines(codeFile)) == 1) {
    ##    message(paste0('removing code file: ', codeFile))
    ##    system(paste0('rm ', codeFile))    ## remove empty code files
    ##} else {  ## remove leading '## ' from any lines...
    ##    RfileLines <- readLines(codeFile)
    ##    linesToModify <- which(grepl('^## ', RfileLines) & (!grepl('^## ----', RfileLines)))
    ##    RfileLines[linesToModify] <- gsub('^## ', '', RfileLines[linesToModify])
    ##    writeLines(RfileLines, codeFile)
    ##}
}

